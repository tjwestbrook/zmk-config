/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
  //  flavor = "tap-unless-interrupted";
  //  tapping-term-ms = <100>;
};

/ {
	combos {
		compatible = "zmk,combos";
		combo_esc {
			timeout-ms = <50>;
			key-positions = <0 1>;
			bindings = <&kp ESC>;
		};
		combo_caps {
			timeout-ms = <50>;
			key-positions = <8 9>;
			bindings = <&kp CAPS>;
		};
		combo_lalt {
			timeout-ms = <50>;
			key-positions = <11 12>;
			bindings = <&kp LALT>;
		};
		combo_lgui {
			timeout-ms = <50>;
			key-positions = <12 13>;
			bindings = <&kp LGUI>;
		};
		combo_tab {
			timeout-ms = <50>;
			key-positions = <10 11>;
			bindings = <&kp TAB>;
		};
		combo_ralt {
			timeout-ms = <50>;
			key-positions = <17 16>;
			bindings = <&kp RALT>;
		};
		combo_rgui {
			timeout-ms = <50>;
			key-positions = <17 18>;
			bindings = <&kp RGUI>;
		};
	};

	keymap {
		compatible = "zmk,keymap";
		default_layer {
			bindings = <
			&kp Q &kp W &kp E &kp R &kp T							&kp Y &kp U &kp I &kp O &kp P
			&mt LSFT A &kp S &kp D &kp F &kp G							&kp H &kp J &kp K &kp L &kp SQT
			&kp Z &kp X &kp C &kp V &kp B						&kp N &kp M &kp CMMA &kp DOT &mt RSFT RET
							&mo 2 &kp LCTL						&kp SPACE &mo 1
			>;
		};
		
		right_layer {
			bindings = <
			&kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT				&kp CARET &kp AMPS &kp KMLT &kp LPAR &kp RPAR
			&kp GRAVE &kp QMARK &kp FSLH &kp COLON &kp SEMI			&kp RBKT &kp LBKT &kp LBRC &kp RBRC &kp BSPC
			&kp PLUS &kp EQUAL &kp BSLH &kp MINUS &kp UNDER			&kp PIPE &kp UP &kp LEFT &kp DOWN &kp RIGHT
							&mo 3 &kp LCTL						&kp SPACE &mo 1
			>;
		};
		
		left_layer {
			bindings = <
			&kp NUM_1 &kp NUM_2 &kp NUM_3 &kp NUM_4 &kp NUM_5		&kp NUM_6 &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp NUM_0
			&kp F1 &kp F2 &kp F3 &kp F4 &kp F5						&kp F6 &kp F7 &kp F8 &kp F9 &kp F10
			&kp DEL &kp INS &kp HOME &kp END &kp TILDE				&kp PAUSE_BREAK &kp PG_UP &kp PG_DN &kp F11 &kp F12
							&mo 2 &kp SPACE						&kp RCTL &mo 3
			>;
		};

		tri_layer {
			bindings = <
			&kp NUM_1 &kp NUM_2 &kp NUM_3 &kp NUM_4 &kp NUM_5		&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
			&kp F1 &kp F2 &kp F3 &kp F4 &kp F5						&bt BT_NXT &kp PG_UP &kp C_VOL_UP &kp C_MUTE &kp C_BRI_UP
			&kp F11 &kp C_PREV &kp C_NEXT &kp C_PP &kp PSCRN		&bt BT_PRV &kp PG_DN &kp C_VOL_DN &bt BT_CLR &kp C_BRI_DN
							&trans &trans						&trans &trans
			>;
		};
	};
};